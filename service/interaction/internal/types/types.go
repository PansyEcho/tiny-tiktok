// Code generated by goctl. DO NOT EDIT.
package types

type Status struct {
	Status_code int32  `json:"status_code"`
	Status_msg  string `json:"status_msg "`
}

type User struct {
	UserID          int64  `json:"id"`
	Username        string `json:"name"`
	FollowCount     int64  `json:"follow_count"`
	FollowerCount   int64  `json:"follower_count"`
	IsFollow        bool   `json:"is_follow"`
	Avatar          string `json:"avatar"`
	BackgroundImage string `json:"background_image"`
	Signature       string `json:"signature"`
	TotalFavorited  string `json:"total_favorited"`
	WorkCount       int    `json:"work_count"`
	FavoriteCount   int    `json:"favorite_count"`
}

type FavoriteReq struct {
	Token      string `form:"token"`
	VideoId    int64  `form:"video_id"`
	ActionType int64  `form:"action_type"`
}

type FavoriteResp struct {
	Status
}

type FollowReq struct {
	Token      string `form:"token"`
	FollowId   int64  `form:"to_user_id"`
	ActionType int64  `form:"action_type"`
}

type FollowResp struct {
	Status
}

type CommentReq struct {
	Token       string `form:"token"`
	VideoId     int64  `form:"video_id"`
	ActionType  int64  `form:"action_type"`
	CommentText string `form:"comment_text,omitempty, optional"`
	CommentId   int64  `form:"comment_id,omitempty, optional"`
}

type Comment struct {
	CommentId  int64  `json:"id" copyier:"id"`
	User       User   `json:"user"`
	Content    string `json:"content"`
	CreateTime string `json:"create_date"`
}

type CommentResp struct {
	Status
	Comment *Comment `json:"comment,omitempty"`
}

type TokenIDReq struct {
	Token  string `form:"token"`
	UserId int64  `form:"user_id"`
}

type FavoriteListReq struct {
	TokenIDReq
}

type Video struct {
	Id            int64  `json:"id"`
	User          User   `json:"author"`
	PlayURL       string `json:"play_url"`
	CoverURL      string `json:"cover_url"`
	FavoriteCount int64  `json:"favorite_count"`
	CommentCount  int64  `json:"comment_count"`
	IsFavorite    bool   `json:"is_favorite"`
	Title         string `json:"title"`
}

type FavoriteListResp struct {
	Status
	FavoriteList []*Video `json:"video_list,omitempty"`
}

type FollowListReq struct {
	TokenIDReq
}

type FollowListResp struct {
	Status
	UserFollowlist []*User `json:"user_list,omitempty"`
}

type FollowerListReq struct {
	TokenIDReq
}

type FollowerListResp struct {
	Status
	UserFollowerlist []*User `json:"user_list,omitempty"`
}

type CommentListReq struct {
	Token   string `form:"token"`
	VideoId int64  `form:"video_id"`
}

type CommentListResp struct {
	Status
	CommentList []*Comment `json:"comment_list,omitempty"`
}
