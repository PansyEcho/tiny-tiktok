// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userinfoservice

import (
	"context"

	"tiny-tiktok/service/user/rpc/types/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetActivityReq     = user.GetActivityReq
	GetActivityResp    = user.GetActivityResp
	UpdateActivityReq  = user.UpdateActivityReq
	UpdateActivityResp = user.UpdateActivityResp
	User               = user.User
	UserInfoReq        = user.UserInfoReq
	UserInfoResp       = user.UserInfoResp

	UserInfoService interface {
		// -----------------------user-----------------------
		Info(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
		AddActivity(ctx context.Context, in *UpdateActivityReq, opts ...grpc.CallOption) (*UpdateActivityResp, error)
		GetActivity(ctx context.Context, in *GetActivityReq, opts ...grpc.CallOption) (*GetActivityResp, error)
	}

	defaultUserInfoService struct {
		cli zrpc.Client
	}
)

func NewUserInfoService(cli zrpc.Client) UserInfoService {
	return &defaultUserInfoService{
		cli: cli,
	}
}

// -----------------------user-----------------------
func (m *defaultUserInfoService) Info(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := user.NewUserInfoServiceClient(m.cli.Conn())
	return client.Info(ctx, in, opts...)
}

func (m *defaultUserInfoService) AddActivity(ctx context.Context, in *UpdateActivityReq, opts ...grpc.CallOption) (*UpdateActivityResp, error) {
	client := user.NewUserInfoServiceClient(m.cli.Conn())
	return client.AddActivity(ctx, in, opts...)
}

func (m *defaultUserInfoService) GetActivity(ctx context.Context, in *GetActivityReq, opts ...grpc.CallOption) (*GetActivityResp, error) {
	client := user.NewUserInfoServiceClient(m.cli.Conn())
	return client.GetActivity(ctx, in, opts...)
}
